/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.projeto.rabbit;

import com.github.britooo.looca.api.core.Looca;
import com.github.britooo.looca.api.group.discos.Disco;
import com.github.britooo.looca.api.group.discos.DiscoGrupo;
import com.github.britooo.looca.api.group.memoria.Memoria;
import com.github.britooo.looca.api.group.processador.Processador;
import com.github.britooo.looca.api.group.processos.ProcessoGrupo;
import com.github.britooo.looca.api.group.servicos.ServicoGrupo;
import com.github.britooo.looca.api.group.sistema.Sistema;
import com.github.britooo.looca.api.group.temperatura.Temperatura;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

/**
 *
 * @author blacklherme
 */
public class TelaDeMonitoramento extends javax.swing.JFrame {

    Looca looca = new Looca();
    Sistema sistema = looca.getSistema();
    Memoria memoria = looca.getMemoria();
    Processador processador = looca.getProcessador();
    Temperatura temperatura = looca.getTemperatura();
    DiscoGrupo grupoDeDiscos = looca.getGrupoDeDiscos();
    ServicoGrupo servico = looca.getGrupoDeServicos();
    ProcessoGrupo processosGroup = looca.getGrupoDeProcessos();

    /**
     * Creates new form NewJFrame
     */
    public TelaDeMonitoramento() {
        initComponents();
        Double total = looca.getMemoria().getTotal() / Math.pow(1024.0, 3.0);
        Double uso = looca.getMemoria().getEmUso() / Math.pow(1024.0, 3.0);
        Double disponivel = looca.getMemoria().getDisponivel() / Math.pow(1024.0, 3.0);

        varCpu.setText(looca.getTemperatura().getTemperatura().toString());
        varUsoRam.setText(String.format("%.2f GB", uso));
        varDispRam.setText(String.format("%.2f GB", disponivel));
        varTotalRam.setText(String.format("%.2f GB", total));
        varDisco.setText(looca.getGrupoDeDiscos().getDiscos().toString());

        int delay = 5000;
        int interval = 1000;
        Timer timer = new Timer();

        timer.scheduleAtFixedRate(new TimerTask() {

            public void run() {
                Double total = looca.getMemoria().getTotal() / Math.pow(1024.0, 3.0);
                Double uso = looca.getMemoria().getEmUso() / Math.pow(1024.0, 3.0);
                Double disponivel = looca.getMemoria().getDisponivel() / Math.pow(1024.0, 3.0);

                varCpu.setText(looca.getTemperatura().getTemperatura().toString());
                varUsoRam.setText(String.format("%.2f GB", uso));
                varDispRam.setText(String.format("%.2f GB", disponivel));
                varTotalRam.setText(String.format("%.2f GB", total));
                varDisco.setText(looca.getGrupoDeDiscos().getDiscos().toString());
            }
        }, delay, interval);
    }
 
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titulo = new javax.swing.JLabel();
        tempCpu = new javax.swing.JLabel();
        varCpu = new javax.swing.JLabel();
        memRam = new javax.swing.JLabel();
        usoRam = new javax.swing.JLabel();
        dispRam = new javax.swing.JLabel();
        totalRam = new javax.swing.JLabel();
        varUsoRam = new javax.swing.JLabel();
        varDispRam = new javax.swing.JLabel();
        varTotalRam = new javax.swing.JLabel();
        disco = new javax.swing.JLabel();
        varDisco = new java.awt.TextArea();
        buttonProcesso = new javax.swing.JButton();
        buttonSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titulo.setText("Monitoramento do hardaware");

        tempCpu.setText("Temperatura CPU:");

        varCpu.setText("0,0");

        memRam.setText("Memoria RAM:");

        usoRam.setText("Uso total:");

        dispRam.setText("Dispon√≠vel:");

        totalRam.setText("Total:");

        varUsoRam.setText("0,0");

        varDispRam.setText("0,0");

        varTotalRam.setText("0,0");

        disco.setText("Disco:");

        buttonProcesso.setText("Ver processo");
        buttonProcesso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonProcessoActionPerformed(evt);
            }
        });

        buttonSair.setText("Sair");
        buttonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(titulo))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(memRam))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(usoRam)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(varUsoRam))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(dispRam)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(varDispRam))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(totalRam)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(varTotalRam))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(disco))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tempCpu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(varCpu)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(varDisco, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buttonProcesso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonSair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titulo)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tempCpu)
                    .addComponent(varCpu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(memRam)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usoRam)
                    .addComponent(varUsoRam))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dispRam)
                    .addComponent(varDispRam))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalRam)
                    .addComponent(varTotalRam))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(disco)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(varDisco, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(buttonProcesso)
                        .addGap(16, 16, 16)
                        .addComponent(buttonSair)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonProcessoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonProcessoActionPerformed
        TelaProcessos tela = new TelaProcessos();
        tela.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_buttonProcessoActionPerformed

    private void buttonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_buttonSairActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaDeMonitoramento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaDeMonitoramento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaDeMonitoramento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaDeMonitoramento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaDeMonitoramento().setVisible(true);
            }
        });   
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonProcesso;
    private javax.swing.JButton buttonSair;
    private javax.swing.JLabel disco;
    private javax.swing.JLabel dispRam;
    private javax.swing.JLabel memRam;
    private javax.swing.JLabel tempCpu;
    private javax.swing.JLabel titulo;
    private javax.swing.JLabel totalRam;
    private javax.swing.JLabel usoRam;
    private javax.swing.JLabel varCpu;
    private java.awt.TextArea varDisco;
    private javax.swing.JLabel varDispRam;
    private javax.swing.JLabel varTotalRam;
    private javax.swing.JLabel varUsoRam;
    // End of variables declaration//GEN-END:variables
}
